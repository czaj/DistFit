clear all; clc; %#ok<CLALL>
DATA = load('data.mat');

DATA.WTPfpU(DATA.WTPfpU == 401) = Inf;
DATA.WTPhpU(DATA.WTPhpU == 401) = Inf;

INPUT.bounds = [DATA.WTPfpL DATA.WTPfpU];
% 1-400 €  month or less, 2-600 - 800 €  month, 3-800 - 1000 €  month, 4-1000 - 1600 € month, 5-1600  € month or more

DATA.inc_norm = DATA.INCOME;
DATA.inc_norm(~isnan(DATA.INCOME)) = (DATA.INCOME(~isnan(DATA.INCOME)) - mean(DATA.INCOME(~isnan(DATA.INCOME)))) ./ std(DATA.INCOME(~isnan(DATA.INCOME)));
% INPUT.X = [2015-DATA.ROK_UR, DATA.EDU==2, DATA.EDU==3,DATA.EDU==4,DATA.inc_norm];
% INPUT.NamesX = {'age','edu = 2','edu = 3','edu = 4','income normalized'};

% INPUT.WT = rand(size(INPUT.bounds,1),1); % Weights assigned to observations

% this is for testing:
INPUT.bounds(2029,2) = Inf;
INPUT.bounds(2028,2) = 0;
INPUT.bounds(2027,1) = -Inf;

Distributions = {...
%     0  'Normal'; ...
%     1  'Logistic'; ...
%     2  'Extreme_Value'; ...
%     3  'Generalized_Extreme_Value'; ...
%     4  'tLocationScale'; ...
%     5  'Uniform'; ...
    6  'Johnson_SU'; ...

%     10  'Expotential'; ...
%     11  'Lognormal'; ...
%     12  'Loglogistic'; ...
%     13  'Weibull'; ...
%     14  'Rayleigh'; ...
%     15  'Gamma'; ...
%     16  'BirnbaumSaunders'; ...
%     17  'Generalized_Pareto'; ...
%     18  'Inverse_Gaussian'; ...
%     19  'Nakagami'; ...
%     20  'Rician'; ...
%     21  'Johnson_SB'; ...
%     22  'Johnson_SU'; ...
% 
%     31  'Poisson'; ...
%     32  'Negative_Binomial'
};

INPUT.SpikeTrue = 1; 

% A0 = DistFit(INPUT,0);
% A11 = DistFit(INPUT,11);

for i = 1:size(Distributions,1);
    WTP.(Distributions{i,2}) = DistFit(INPUT,Distributions{i,1});
end
 
for i = 1:size(Distributions,1);
    LL(i,1:2) = {Distributions{i,2}, WTP.(Distributions{i,2}).fval}; %#ok<SAGROW>
end


